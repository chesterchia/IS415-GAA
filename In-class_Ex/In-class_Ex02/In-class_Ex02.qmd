---
title: "In-class Exercise 2"
author: "Chester Chia"
---

### Dependencies used

-   arrow

-   lubridate

-   tidyverse

-   tmap

-   sf

### Loading the packages

```{r}
pacman::p_load(arrow, lubridate, tidyverse, tmap, sf)
```

### Importing the GrabPosisi Dataset

```{r}
#| eval: false
df <- read_parquet("data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet")
df$pingtimestamp <- as_datetime(df$pingtimestamp)
```

Save this reformatted df into a new rds

```{r}
#| eval: false
write_rds(df, "data/rds/part0.rds")
```

Group by the trajectory id, sort it using the pingtimestamp field, and then filter the first result (since the first trip will be the origin). Use lubridate functions (and convert to factor).

```{r}
#| eval: false
origin_df <- df %>%
  group_by(trj_id) %>%
  arrange(pingtimestamp) %>%
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp,
                        label=TRUE,
                        abbr=TRUE),
         start_hr = factor(hour(pingtimestamp)),
         day = factor(mday(pingtimestamp)))
  
```

For destination, can do the same but sort descending using the pingtimestamp field instead.

```{r}
#| eval: false
destination_df <- df %>%
  group_by(trj_id) %>%
  arrange(desc(pingtimestamp)) %>%
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp,
                        label=TRUE,
                        abbr=TRUE),
         end_hr = factor(hour(pingtimestamp)),
         day = factor(mday(pingtimestamp)))
```

Save the df into an rds file to save memory, can retrieve next time for future use.
```{r}
#| eval: false
write_rds(origin_df, "data/rds/origin_df.rds")
write_rds(destination_df, "data/rds/destination_df.rds")
```

How to retrieve the data:
```{r}
origin_df <- read_rds("data/rds/origin_df.rds")
destination_df <- read_rds("data/rds/destination_df.rds")
```

### Visualising frequency distribution

```{r}
ggplot(data=origin_df, 
       aes(x=weekday)) + 
  geom_bar()
```

### Converting into sf tibble data.frame
```{r}
origin_sf <- st_as_sf(origin_df,
                      coords = c("rawlng", "rawlat"),
                      crs = 4326) %>%
  st_transform(crs = 3414)
```

### Visualising as a Point Symbol Map
```{r}
tmap_mode("plot")
tm_shape(origin_sf) +
  tm_dots()
```
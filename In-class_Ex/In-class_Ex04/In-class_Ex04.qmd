---
title: "In-class Exercise 4"
author: "Chester Chia"
---

```{r}
pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)
```

```{r}
hunan <- st_read(dsn="data/geospatial",
                 layer="Hunan")
```

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan <- left_join(hunan, hunan2012) %>%
  select(1:4, 7, 15)
```

### Working with GWSS

```{r}
hunan_sp <- hunan %>%
  as_Spatial()
```

```{r}
gwstat <- gwss(data = hunan_sp,
               vars = "GDPPC",
               bw = 6,
               kernel = "bisquare",
               adaptive = TRUE,
               longlat = T)
```

### Recap from Hands-on Exercise 4

```{r}
basemap <- tm_shape(hunan) + #no output, just read into memory
  tm_polygons() + #plot out polygons
  tm_text("NAME_3", size=0.5) #county name and font size


gdppc <- qtm(hunan, "GDPPC")
tmap_arrange(basemap, gdppc, asp=1, ncol=2) #use tmap to arrange 2 maps into 1 row, 2 col
```

```{r}
wm_q <- poly2nb(hunan, queen=TRUE) #list of polygon and its neighbours based on internal id using queen's case
summary(wm_q)
```

```{r}
wm_q[[1]] #gives neighbours of id=1
```

To get name, must use **hunan**, not **wm_q** which is a list and does not contain the name:

```{r}
hunan$County[1] #retrieves county name of id=
```

```{r}
hunan$NAME_3[c(2,3,4,57,85)] #names of five neighbouring polygons
```

```{r}
wm_r <- poly2nb(hunan, queen=FALSE) #uses rook case instead
summary(wm_r) #number of links will be reduced as compared to using queen's case
```

For fixed distance, determine cut-off distance.

```{r}
longitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])
latitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])
coords <- cbind(longitude, latitude)
k1 <- knn2nb(knearneigh(coords)) #calculate nearest neighbour
k1dists <- unlist(nbdists(k1, coords, longlat = TRUE)) 
summary(k1dists)
```

Use largest distance as cut off, round up (61.79 \~ 62)

```{r}
wm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE) #anything <62km considered neighbour
wm_d62
```

```{r}
par(mfrow=c(1,2))
plot(hunan$geometry, border="lightgrey", main="1st nearest neighbours")
plot(k1, coords, add=TRUE, col="red", length=0.08)
plot(hunan$geometry, border="lightgrey", main="Distance link")
plot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)
```

```{r}
knn6 <- knn2nb(knearneigh(coords, k=6))
knn6
```

```{r}
plot(hunan$geometry, border="lightgrey")
plot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = "red")
```

```{r}
rswm_q <- nb2listw(wm_q, style="W", zero.policy = TRUE)
rswm_q
```

```{r}
lag.list <- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))
lag.res <- as.data.frame(lag.list)
colnames(lag.res) <- c("NAME_3", "lag GDPPC")
hunan <- left_join(hunan,lag.res)
```

```{r}
gdppc <- qtm(hunan, "GDPPC")
lag_gdppc <- qtm(hunan, "lag GDPPC")
tmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)
```

```{r}
b_weights <- lapply(wm_q, function(x) 0*x + 1)
b_weights2 <- nb2listw(wm_q, 
                       glist = b_weights, 
                       style = "B")
b_weights2
```

```{r}
lag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))
lag.res <- as.data.frame(lag_sum)
colnames(lag.res) <- c("NAME_3", "lag_sum GDPPC")
```

```{r}
hunan <- left_join(hunan, lag.res)
gdppc <- qtm(hunan, "GDPPC")
lag_sum_gdppc <- qtm(hunan, "lag_sum GDPPC")
tmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)
```
